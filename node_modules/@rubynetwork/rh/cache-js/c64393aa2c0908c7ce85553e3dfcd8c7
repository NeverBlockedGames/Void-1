/*hammerhead|script|start*/if (typeof window !== 'undefined' && window){window['hammerhead|process-dom-method'] && window['hammerhead|process-dom-method']();if (window.__get$ && typeof __get$ === 'undefined')var __get$Loc = window.__get$Loc,__set$Loc = window.__set$Loc,__set$ = window.__set$,__get$ = window.__get$,__call$ = window.__call$,__get$Eval = window.__get$Eval,__proc$Script = window.__proc$Script,__proc$Html = window.__proc$Html,__get$PostMessage = window.__get$PostMessage,__get$ProxyUrl = window.__get$ProxyUrl,__rest$Array = window.__rest$Array,__rest$Object = window.__rest$Object,__arrayFrom$ = window.__arrayFrom$;} else {if (typeof __get$ === 'undefined')var __get$Loc = function(l){return l},__set$Loc = function(l,v){return l = v},__set$ = function(o,p,v){return o[p] = v},__get$ = function(o,p){return o[p]},__call$ = function(o,p,a){return o[p].apply(o,a)},__get$Eval = function(e){return e},__proc$Script = function(s){return s},__proc$Html = function(h){return h},__get$PostMessage = function(w,p){return arguments.length===1?w.postMessage:p},__get$ProxyUrl = function(u,d){return u},__rest$Array = function(a,i){return Array.prototype.slice.call(a, i)},__rest$Object = function(o,p){var k=Object.keys(o),n={};for(var i=0;i<k.length;++i)if(p.indexOf(k[i])<0)n[k[i]]=o[k[i]];return n},__arrayFrom$ = function(r){if(!r)return r;return!Array.isArray(r)&&"function"==typeof r[Symbol.iterator]?Array.from(r):r};if (typeof importScripts !== "undefined" && /\[native code]/g.test(importScripts.toString())) {var __getWorkerSettings$ = function () {return null};importScripts((location.origin || (location.protocol + "//" + location.host)) + "/worker-hammerhead.js");}}/*hammerhead|script|processing-header-end*/
//init the interstitial 
window.adsLoaded = true;
window.isWatchingRV = false;
window.didInitInter = false;
let iAd; //Inter Ads
let rAd; //RV Ads

async function initAds() {
    
    while (window.cpmstarAPI === undefined) {
        await sleep(500)
    }

    let isCOPPAEnabled = window.localStorage.getItem("isCOPPAEnabled");
    if(isCOPPAEnabled === null) {
        setCOPPAFlag(true);
    }
    else {
        setCOPPAFlag(isCOPPAEnabled);
        await initInterAds();
    }
}

window.OnAgeGateDataReceived = async (isCOPPAEnabled) => {
    setCOPPAFlag(isCOPPAEnabled)
    if(!window.didInitInter) {
        await initInterAds();
    }
}

window.setCOPPAFlag = (isEnabled) => {
    window.cpmstarAPI({kind: "coppa" ,value: isEnabled});
    window.localStorage.setItem("isCOPPAEnabled", isEnabled);
}

async function initInterAds() {
    window.cpmstarAPI(async function (api) {
        iAd = new api.game.InterstitialView("interstitial");
        iAd.addEventListener("ad_opened", function (e) {
            iAdPause(); //Pause the game when ad is open
        });

        iAd.addEventListener("ad_closed", function (e) {
            setTimeout(function () {
                iAdUnpause(); //Unpause when ad closed.
            }, 700);
            iAd.load(); //Preload another ad.
        });

        iAd.addEventListener("load_failed", function(e) {
            //console.warn("Inter Ad failed to load:" + JSON.stringify(e));
            onAdLoadFailed()
        });

        iAd.addEventListener("loaded", function() {
            console.warn("Inter Ad loaded");
        });

        await sleep(1000);
        iAd.load();
        window.didInitInter = true;
    });

    function iAdPause() {
        unityAdStartedCallback()
    }
    function iAdUnpause() {
        unityAdFinishedCallback("true")
    }
}

window.requestNewAd = () => {
    if(iAd && !iAd.isLoaded()) {
        console.warn("No inter ad available")
    }
    if (iAd && iAd.isLoaded()) {
        iAd.show(); //Show loaded ad   
    }
    else {
        if (iAd) iAd.load(); //If no ad available, load another      
        unityAdFinishedCallback("false")
    }
}

// This function calls Unity to tell the ad started
function unityAdStartedCallback() {
    try {
        if (window.unityInstance) {
            window.unityInstance.SendMessage('PersistentObjects', 'OnWebInterstitialStarted');
        }
    }
    catch (error) {
        console.log(error);
    }
}

// This function calls Unity to tell the ad finished
function unityAdFinishedCallback(state) {
    try {
        if (window.unityInstance) {
            window.unityInstance.SendMessage('PersistentObjects', 'OnWebInterstitialEnded', state);
        }
    }
    catch (error) {
        console.log(error);
    }
}

function sleep(ms) {
    return new Promise(resolve => setTimeout(resolve, ms));
}

window.initWebRVAd = () => {
    window.cpmstarAPI(function(api) {
        rAd = new api.game.RewardedVideoView("rewardedvideo");
        rAd.load();

        function rvStarted() {
            window.unityInstance.SendMessage('PersistentObjects', 'OnWebRVStarted');
            window.isWatchingRV = true;
        }
        function rvEnded() {
            window.unityInstance.SendMessage('PersistentObjects', 'OnWebRVEnded');
            window.isWatchingRV = false;
        }

        rAd.addEventListener("ad_opened", function(e) {
            rvStarted();
        });

        rAd.addEventListener("ad_closed", function(e) {
            setTimeout(function() {
                rvEnded();
            },700);
            rAd.load();
        });

        rAd.addEventListener("loaded", function(e) {
            window.unityInstance.SendMessage('PersistentObjects', 'OnWebRVReady');
        });

        rAd.addEventListener("load_failed", function(e) {
            console.warn("RV Ad failed to load:" + e);
        });
    });
}

window.showWebRVAd = () => {
    if (rAd && rAd.isLoaded()) {
        rAd.show(); //Show loaded ad   
    }
    else {
        unityAdFinishedCallback("false")
    }
}

async function onAdLoadFailed() {
    await sleep(10000);
    iAd.load();
}
/*hammerhead|script|end*/