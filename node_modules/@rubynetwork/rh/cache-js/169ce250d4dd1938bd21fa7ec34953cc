/*hammerhead|script|start*/if (typeof window !== 'undefined' && window){window['hammerhead|process-dom-method'] && window['hammerhead|process-dom-method']();if (window.__get$ && typeof __get$ === 'undefined')var __get$Loc = window.__get$Loc,__set$Loc = window.__set$Loc,__set$ = window.__set$,__get$ = window.__get$,__call$ = window.__call$,__get$Eval = window.__get$Eval,__proc$Script = window.__proc$Script,__proc$Html = window.__proc$Html,__get$PostMessage = window.__get$PostMessage,__get$ProxyUrl = window.__get$ProxyUrl,__rest$Array = window.__rest$Array,__rest$Object = window.__rest$Object,__arrayFrom$ = window.__arrayFrom$;} else {if (typeof __get$ === 'undefined')var __get$Loc = function(l){return l},__set$Loc = function(l,v){return l = v},__set$ = function(o,p,v){return o[p] = v},__get$ = function(o,p){return o[p]},__call$ = function(o,p,a){return o[p].apply(o,a)},__get$Eval = function(e){return e},__proc$Script = function(s){return s},__proc$Html = function(h){return h},__get$PostMessage = function(w,p){return arguments.length===1?w.postMessage:p},__get$ProxyUrl = function(u,d){return u},__rest$Array = function(a,i){return Array.prototype.slice.call(a, i)},__rest$Object = function(o,p){var k=Object.keys(o),n={};for(var i=0;i<k.length;++i)if(p.indexOf(k[i])<0)n[k[i]]=o[k[i]];return n},__arrayFrom$ = function(r){if(!r)return r;return!Array.isArray(r)&&"function"==typeof r[Symbol.iterator]?Array.from(r):r};if (typeof importScripts !== "undefined" && /\[native code]/g.test(importScripts.toString())) {var __getWorkerSettings$ = function () {return null};importScripts((location.origin || (location.protocol + "//" + location.host)) + "/worker-hammerhead.js");}}/*hammerhead|script|processing-header-end*/
window.gameScriptLoaded = true;

function showGame() {
	const buildUrl = getBuildUrl();
	const config = {
		dataUrl: buildUrl + "/WebGL.data.unityweb",
        frameworkUrl: buildUrl + "/WebGL.framework.js.unityweb",
        codeUrl: buildUrl + "/WebGL.wasm.unityweb",
        streamingAssetsUrl: "StreamingAssets",
        companyName: "JustPlay.LOL",
        productName: "1v1.LOL",
        productVersion: "4.0",
        cacheControl: function (url) {
            return "must-revalidate";
        },
    };

	const canvas = document.getElementById("gameContainer");

	createUnityInstance(canvas, config, UnityProgress)
		.then(instance => window.unityInstance = instance)
		.catch(error => {
			console.error(error)
			 __get$Loc(location) .reload();
		});

	if(typeof showAds === "function") {
		showAds();
	}
}

function UnityProgress(progress) {
	const loader = document.querySelector("#loader");

	if (!window.progressBar) {
		const progress = document.querySelector("#loader .progress");
		progress.style.display = "block";
		window.progressBar = progress.querySelector(".full");
		loader.querySelector(".spinner").style.display = "none";
	}

	window.gameStartLoading = true;
	window.progressBar.style.transform = `scaleX(${progress})`;
	
	if (progress === 1) {
		loader.style.display = "none";
		window.gameLoaded = true;
	}
}
/*hammerhead|script|end*/