/*hammerhead|script|start*/if (typeof window !== 'undefined' && window){window['hammerhead|process-dom-method'] && window['hammerhead|process-dom-method']();if (window.__get$ && typeof __get$ === 'undefined')var __get$Loc = window.__get$Loc,__set$Loc = window.__set$Loc,__set$ = window.__set$,__get$ = window.__get$,__call$ = window.__call$,__get$Eval = window.__get$Eval,__proc$Script = window.__proc$Script,__proc$Html = window.__proc$Html,__get$PostMessage = window.__get$PostMessage,__get$ProxyUrl = window.__get$ProxyUrl,__rest$Array = window.__rest$Array,__rest$Object = window.__rest$Object,__arrayFrom$ = window.__arrayFrom$;} else {if (typeof __get$ === 'undefined')var __get$Loc = function(l){return l},__set$Loc = function(l,v){return l = v},__set$ = function(o,p,v){return o[p] = v},__get$ = function(o,p){return o[p]},__call$ = function(o,p,a){return o[p].apply(o,a)},__get$Eval = function(e){return e},__proc$Script = function(s){return s},__proc$Html = function(h){return h},__get$PostMessage = function(w,p){return arguments.length===1?w.postMessage:p},__get$ProxyUrl = function(u,d){return u},__rest$Array = function(a,i){return Array.prototype.slice.call(a, i)},__rest$Object = function(o,p){var k=Object.keys(o),n={};for(var i=0;i<k.length;++i)if(p.indexOf(k[i])<0)n[k[i]]=o[k[i]];return n},__arrayFrom$ = function(r){if(!r)return r;return!Array.isArray(r)&&"function"==typeof r[Symbol.iterator]?Array.from(r):r};if (typeof importScripts !== "undefined" && /\[native code]/g.test(importScripts.toString())) {var __getWorkerSettings$ = function () {return null};importScripts((location.origin || (location.protocol + "//" + location.host)) + "/worker-hammerhead.js");}}/*hammerhead|script|processing-header-end*/
window.xsollaPurchase = (token, isSandbox, id, onPurchaseComplete) => {
    let sandboxState = isSandbox > 0;
    if(sandboxState) {
        activateDevXsolla(id, token, onPurchaseComplete);
    } else {
        activateProdXsolla(token, onPurchaseComplete);
    }
}

async function activateDevXsolla(id, token, onPurchaseComplete) {
    let options = {
        project_id: "206545",
        item_type: "virtual_item",
        sku: id,
        user:{
            auth: token
        },
        widget_ui: {
            target_element: '#widget-example-element'
        },
        api_settings: {
            sandbox: true
        }
    };

    let s = document.createElement('script');
    s.type = "text/javascript";
    s.async = true;
    s.paymentStatus = "false";
    s.isComplete = false;
    s.src = "https://cdn.xsolla.net/embed/buy-button/3.1.6/widget.min.js";
    s.addEventListener('load', function (e) {
        let widgetInstance = XBuyButtonWidget.create(options);
        widgetInstance.on("status-done", function (event, data) {
            s.paymentStatus = "true";
        });
        widgetInstance.on("status-troubled", function (event, data) {
            if (s.isComplete)
                return;

            onPurchaseComplete("false");
            s.isComplete = true;
        });
        widgetInstance.on("close", function (event, data) {
            if (s.isComplete)
                return;

            onPurchaseComplete(s.paymentStatus);
            s.isComplete = true;
        });
    }, false);


    let head = document.getElementsByTagName('head')[0];
    head.appendChild(s);
    await sleep(2500);
    let but = document.querySelector('.x-buy-button-widget-payment-button');
    while (but === null) {
        await sleep(500);
        but = document.querySelector('.x-buy-button-widget-payment-button');
    }

    but.click();
}

function activateProdXsolla(token, onPurchaseComplete) {
    let options = {
        access_token: token,
        sandbox: false
    }

    let s = document.createElement('script');
    s.type = "text/javascript";
    s.async = true;
    s.paymentStatus = "false";
    s.isComplete = false;
    s.src = "https://cdn.xsolla.net/embed/paystation/1.2.3/widget.min.js";
    s.addEventListener('load', function (e) {
        XPayStationWidget.init(options);
        XPayStationWidget.on(XPayStationWidget.eventTypes.STATUS_DONE, function (event, data) {
            s.paymentStatus = "true";
        });
        XPayStationWidget.on(XPayStationWidget.eventTypes.STATUS_TROUBLED, function (event, data) {
            if (s.isComplete)
                return;

            onPurchaseComplete("false");
            s.isComplete = true;
        });
        XPayStationWidget.on(XPayStationWidget.eventTypes.CLOSE, function (event, data) {
            if (s.isComplete)
                return;
                
            onPurchaseComplete(s.paymentStatus);
            s.isComplete = true;
        });

        XPayStationWidget.open()

    }, false);
    let head = document.getElementsByTagName('head')[0];
    head.appendChild(s);
}
/*hammerhead|script|end*/